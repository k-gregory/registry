error_page 400 /400.json;
location /400.json {
  default_type application/json;
  return 400 '{"error": "Bad Request", "message": "The request could not be understood by the server due to malformed syntax."}';
}

error_page 401 /401.json;
location /401.json {
  default_type application/json;
  return 401 '{"error": "Unauthorized", "message": "The request requires user authentication."}';
}

error_page 402 /402.json;
location /402.json {
  default_type application/json;
  return 402 '{"error": "Payment Required", "message": "This code is reserved for future use. "}';
}

error_page 403 /403.json;
location /403.json {
  default_type application/json;
  return 403 '{"error": "Forbidden", "message": "The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. "}';
}

error_page 404 /404.json;
location /404.json {
  default_type application/json;
  return 404 '{"error": "Not Found", "message": "The server has not found anything matching the Request-URI"}';
}

error_page 405 /405.json;
location /405.json {
  default_type application/json;
  return 405 '{"error": "Method Not Allowed", "message": "The method specified in the Request-Line is not allowed for the resource identified by the Request-URI. "}';
}

error_page 406 /406.json;
location /406.json {
  default_type application/json;
  return 406 '{"error": "Not Acceptable", "message": "The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. "}';
}

error_page 407 /407.json;
location /407.json {
  default_type application/json;
  return 407 '{"error": "Proxy Authentication Required", "message": "Client must first authenticate itself with the proxy"}';
}

error_page 408 /408.json;
location /408.json {
  default_type application/json;
  return 408 '{"error": "Request Timeout", "message": "The client did not produce a request within the time that the server was prepared to wait."}';
}

error_page 409 /409.json;
location /409.json {
  default_type application/json;
  return 409 '{"error": "Conflict", "message": "The request could not be completed due to a conflict with the current state of the resource."}';
}

error_page 410 /410.json;
location /410.json {
  default_type application/json;
  return 410 '{"error": "Gone", "message": "The requested resource is no longer available at the server and no forwarding address is known. This condition is expected to be considered permanent."}';
}

error_page 411 /411.json;
location /411.json {
  default_type application/json;
  return 411 '{"error": "Length Required", "message": "The server refuses to accept the request without a defined Content- Length."}';
}

error_page 412 /412.json;
location /412.json {
  default_type application/json;
  return 412 '{"error": "Precondition Failed", "message": "The precondition given in one or more of the request-header fields evaluated to false when it was tested on the server. "}';
}

error_page 413 /413.json;
location /413.json {
  default_type application/json;
  return 413 '{"error": "Request Entity Too Large", "message": "The server is refusing to process a request because the request entity is larger than the server is willing or able to process."}';
}

error_page 414 /414.json;
location /414.json {
  default_type application/json;
  return 414 '{"error": "Request-URI Too Long", "message": "The server is refusing to service the request because the Request-URI is longer than the server is willing to interpret."}';
}

error_page 415 /415.json;
location /415.json {
  default_type application/json;
  return 415 '{"error": "Unsupported Media Type", "message": "The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method. "}';
}

error_page 416 /416.json;
location /416.json {
  default_type application/json;
  return 416 '{"error": "Requested Range Not Satisfiable", "message": "Request included a Range request-header field, and none of the range-specifier values in this field overlap the current extent of the selected resource, and the request did not include an If-Range request-header field."}';
}

error_page 417 /417.json;
location /417.json {
  default_type application/json;
  return 417 '{"error": "Expectation Failed", "message": "The expectation given in an Expect request-header field could not be met by this server, or, if the server is a proxy, the server has unambiguous evidence that the request could not be met by the next-hop server. "}';
}

error_page 500 /500.json;
location /500.json {
  default_type application/json;
  return 500 '{"error": "Internal Server Error", "message": "The server encountered an unexpected condition which prevented it from fulfilling the request. "}';
}

error_page 501 /501.json;
location /501.json {
  default_type application/json;
  return 501 '{"error": "Not Implemented", "message": "The server does not support the functionality required to fulfill the request."}';
}

error_page 502 /502.json;
location /502.json {
  default_type application/json;
  return 502 '{"error": "Bad Gateway", "message": "The server, while acting as a gateway or proxy, received an invalid response from the upstream server it accessed in attempting to fulfill the request."}';
}

error_page 503 /503.json;
location /503.json {
  default_type application/json;
  return 503 '{"error": "Service Unavailable", "message": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server. The implication is that this is a temporary condition which will be alleviated after some delay."}';
}

error_page 504 /504.json;
location /504.json {
  default_type application/json;
  return 504 '{"error": "Gateway Timeout", "message": "The server, while acting as a gateway or proxy, did not receive a timely response from the upstream server specified by the URI (e.g. HTTP, FTP, LDAP) or some other auxiliary server (e.g. DNS) it needed to access in attempting to complete the request."}';
}

error_page 505 /505.json;
location /505.json {
  default_type application/json;
  return 505 '{"error": "HTTP Version Not Supported", "message": "The server does not support, or refuses to support, the HTTP protocol version that was used in the request message."}';
}

