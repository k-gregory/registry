group 'io.github.k_gregory'
version '0.0.1-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8

jar {
    baseName = 'myproject'
    version = '0.0.1-SNAPSHOT'
}

repositories {
    jcenter()
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter'
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools'
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: '3.0.2.RELEASE'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.flywaydb', name: 'flyway-core', version: '5.0.7'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.1'
    compile group: 'org.modelmapper', name: 'modelmapper', version: '1.1.0'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.9.0'
}

compileJava.dependsOn(processResources)

test {
    testLogging {
        // set options for log level LIFECYCLE
        events "failed"
        exceptionFormat "short"

        // set options for log level DEBUG
        debug {
            events "started", "skipped", "failed"
            exceptionFormat "full"
        }

        // remove standard output/error logging from --info builds
        // by assigning only 'failed' and 'skipped' events
        info.events = ["failed", "skipped"]
    }
}

task unitTest(type: Test) {
    useJUnit {
        excludeCategories 'io.github.k_gregory.registry.IntegrationCategory'
    }
}